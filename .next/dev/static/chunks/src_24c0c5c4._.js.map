{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/rushabhrunwal/Developer/CalHacks/multiplayer-ai-chat-python/src/components/ChatMessage.tsx"],"sourcesContent":["import { Message } from '@/types/chat';\n\ninterface ChatMessageProps {\n    message: Message;\n}\n\nexport default function ChatMessage({ message }: ChatMessageProps) {\n    const formatTime = (timestamp: number) => {\n        return new Date(timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const getInitials = (username: string) => {\n        return username\n            .split(' ')\n            .map(word => word[0])\n            .join('')\n            .toUpperCase()\n            .slice(0, 2);\n    };\n\n    if (message.isAI) {\n        return (\n            <div className=\"flex items-start space-x-3 bounce-in\">\n                <div className=\"flex-shrink-0\">\n                    <div className=\"w-12 h-12 tom-gradient rounded-full flex items-center justify-center text-white text-2xl font-semibold shadow-medium wiggle\">\n                        üê±\n                    </div>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                        <span className=\"text-sm font-bold text-gray-900\">{message.username}</span>\n                        <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-tom-sm\">{formatTime(message.timestamp)}</span>\n                    </div>\n                    <div className=\"tom-message p-4 max-w-xs lg:max-w-md\">\n                        <p className=\"text-white font-medium leading-relaxed\">{message.content}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"flex items-start space-x-3 slide-in\">\n            <div className=\"flex-shrink-0\">\n                <div className=\"w-12 h-12 sky-gradient rounded-full flex items-center justify-center text-white text-lg font-bold shadow-medium\">\n                    {getInitials(message.username)}\n                </div>\n            </div>\n            <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                    <span className=\"text-sm font-bold text-gray-900\">{message.username}</span>\n                    <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-tom-sm\">{formatTime(message.timestamp)}</span>\n                </div>\n                <div className=\"user-message p-4 max-w-xs lg:max-w-md\">\n                    <p className=\"text-white font-medium leading-relaxed\">{message.content}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;;AAMe,SAAS,YAAY,EAAE,OAAO,EAAoB;IAC7D,MAAM,aAAa,CAAC;QAChB,OAAO,IAAI,KAAK,WAAW,kBAAkB,CAAC,EAAE,EAAE;YAC9C,MAAM;YACN,QAAQ;QACZ;IACJ;IAEA,MAAM,cAAc,CAAC;QACjB,OAAO,SACF,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,IAAI,CAAC,EAAE,EACnB,IAAI,CAAC,IACL,WAAW,GACX,KAAK,CAAC,GAAG;IAClB;IAEA,IAAI,QAAQ,IAAI,EAAE;QACd,qBACI,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC;wBAAI,WAAU;kCAA8H;;;;;;;;;;;8BAIjJ,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAK,WAAU;8CAAmC,QAAQ,QAAQ;;;;;;8CACnE,6LAAC;oCAAK,WAAU;8CAA8D,WAAW,QAAQ,SAAS;;;;;;;;;;;;sCAE9G,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC;gCAAE,WAAU;0CAA0C,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;;;;;IAK1F;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;8BACV,YAAY,QAAQ,QAAQ;;;;;;;;;;;0BAGrC,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAK,WAAU;0CAAmC,QAAQ,QAAQ;;;;;;0CACnE,6LAAC;gCAAK,WAAU;0CAA8D,WAAW,QAAQ,SAAS;;;;;;;;;;;;kCAE9G,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAE,WAAU;sCAA0C,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;;;;;AAK1F;KAxDwB","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/rushabhrunwal/Developer/CalHacks/multiplayer-ai-chat-python/src/components/ChatInput.tsx"],"sourcesContent":["'use client';\n\nimport { useState, KeyboardEvent } from 'react';\n\ninterface ChatInputProps {\n    onSendMessage: (message: string) => void;\n    disabled?: boolean;\n}\n\nexport default function ChatInput({ onSendMessage, disabled = false }: ChatInputProps) {\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = () => {\n        if (message.trim() && !disabled) {\n            onSendMessage(message);\n            setMessage('');\n        }\n    };\n\n    const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit();\n        }\n    };\n\n    return (\n        <div className=\"flex items-center space-x-4 p-4\">\n            <div className=\"flex-1\">\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    placeholder={disabled ? \"Connecting to Tom...\" : \"Type a message to Tom...\"}\n                    disabled={disabled}\n                    className=\"tom-input w-full px-4 py-4 text-lg disabled:bg-gray-100 disabled:cursor-not-allowed\"\n                    maxLength={500}\n                />\n            </div>\n            <button\n                onClick={handleSubmit}\n                disabled={!message.trim() || disabled}\n                className=\"tom-button tom-gradient text-white px-8 py-4 rounded-tom font-bold text-lg shadow-medium disabled:bg-gray-300 disabled:cursor-not-allowed disabled:transform-none\"\n            >\n                Send\n            </button>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AASe,SAAS,UAAU,EAAE,aAAa,EAAE,WAAW,KAAK,EAAkB;;IACjF,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,MAAM,eAAe;QACjB,IAAI,QAAQ,IAAI,MAAM,CAAC,UAAU;YAC7B,cAAc;YACd,WAAW;QACf;IACJ;IAEA,MAAM,iBAAiB,CAAC;QACpB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YAClC,EAAE,cAAc;YAChB;QACJ;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBACG,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;oBAC1C,YAAY;oBACZ,aAAa,WAAW,yBAAyB;oBACjD,UAAU;oBACV,WAAU;oBACV,WAAW;;;;;;;;;;;0BAGnB,6LAAC;gBACG,SAAS;gBACT,UAAU,CAAC,QAAQ,IAAI,MAAM;gBAC7B,WAAU;0BACb;;;;;;;;;;;;AAKb;GAxCwB;KAAA","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///Users/rushabhrunwal/Developer/CalHacks/multiplayer-ai-chat-python/src/app/room/%5BroomId%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams, useSearchParams } from 'next/navigation';\nimport { io, Socket } from 'socket.io-client';\nimport { Message, User } from '@/types/chat';\nimport ChatMessage from '@/components/ChatMessage';\nimport ChatInput from '@/components/ChatInput';\n\nexport default function RoomPage() {\n    const params = useParams();\n    const searchParams = useSearchParams();\n    const roomId = params.roomId as string;\n    const username = searchParams.get('username') || '';\n\n    const [socket, setSocket] = useState<Socket | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [users, setUsers] = useState<User[]>([]);\n    const [isConnected, setIsConnected] = useState(false);\n    const [error, setError] = useState<string>('');\n\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!username) {\n            setError('Username is required');\n            return;\n        }\n\n        // Initialize socket connection to Python backend\n        const newSocket = io(process.env.NODE_ENV === 'production' ? '' : 'http://localhost:8000');\n        setSocket(newSocket);\n\n        // Connection events\n        newSocket.on('connect', () => {\n            setIsConnected(true);\n            setError('');\n            // Join room after connection\n            newSocket.emit('joinRoom', { roomId, username });\n        });\n\n        newSocket.on('disconnect', () => {\n            setIsConnected(false);\n        });\n\n        // Message events\n        newSocket.on('message', (message: Message) => {\n            setMessages(prev => [...prev, message]);\n        });\n\n        newSocket.on('userJoined', (user: User) => {\n            setUsers(prev => {\n                if (!prev.find(u => u.id === user.id)) {\n                    return [...prev, user];\n                }\n                return prev;\n            });\n        });\n\n        newSocket.on('userLeft', (userId: string) => {\n            setUsers(prev => prev.filter(user => user.id !== userId));\n        });\n\n        newSocket.on('roomUsers', (roomUsers: User[]) => {\n            setUsers(roomUsers);\n        });\n\n        newSocket.on('error', (errorMessage: string) => {\n            setError(errorMessage);\n        });\n\n        return () => {\n            newSocket.close();\n        };\n    }, [roomId, username]);\n\n    // Auto-scroll to bottom when new messages arrive\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const sendMessage = (content: string) => {\n        if (socket && content.trim()) {\n            socket.emit('sendMessage', {\n                content: content.trim(),\n                username,\n                roomId\n            });\n        }\n    };\n\n    const copyRoomCode = () => {\n        navigator.clipboard.writeText(roomId);\n        // You could add a toast notification here\n    };\n\n    if (error) {\n        return (\n            <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n                <div className=\"bg-white p-8 rounded-lg shadow-lg text-center\">\n                    <h2 className=\"text-xl font-semibold text-red-600 mb-4\">Error</h2>\n                    <p className=\"text-gray-600 mb-4\">{error}</p>\n                    <button\n                        onClick={() => window.location.href = '/'}\n                        className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\n                    >\n                        Go Home\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"h-screen flex flex-col\" style={{ background: 'var(--chat-bg)' }}>\n            {/* Header */}\n            <div className=\"tom-gradient px-6 py-4 flex items-center justify-between shadow-medium\">\n                <div className=\"flex items-center space-x-4\">\n                    <button\n                        onClick={() => window.location.href = '/'}\n                        className=\"tom-button bg-white text-gray-700 px-4 py-2 rounded-tom-sm font-semibold hover:bg-gray-50\"\n                    >\n                        ‚Üê Back\n                    </button>\n                    <div className=\"flex items-center space-x-3\">\n                        <div className=\"text-3xl float\">üê±</div>\n                        <div>\n                            <h1 className=\"text-xl font-bold text-white\">Room: {roomId}</h1>\n                            <div className=\"flex items-center space-x-2\">\n                                <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'} pulse-glow`}></div>\n                                <span className=\"text-sm text-white font-medium\">\n                                    {isConnected ? 'Connected' : 'Disconnected'}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flex items-center space-x-4\">\n                    <div className=\"user-count\">\n                        {users.length} user{users.length !== 1 ? 's' : ''} online\n                    </div>\n                    <button\n                        onClick={copyRoomCode}\n                        className=\"tom-button bg-white text-gray-700 px-4 py-2 rounded-tom-sm font-semibold hover:bg-gray-50\"\n                    >\n                        Copy Room Code\n                    </button>\n                </div>\n            </div>\n\n            {/* Messages */}\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {messages.length === 0 ? (\n                    <div className=\"text-center text-gray-500 mt-8\">\n                        <p>No messages yet. Start the conversation!</p>\n                    </div>\n                ) : (\n                    messages.map((message) => (\n                        <ChatMessage key={message.id} message={message} />\n                    ))\n                )}\n                <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input */}\n            <div className=\"bg-white border-t border-gray-200 p-4\">\n                <ChatInput onSendMessage={sendMessage} disabled={!isConnected} />\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}